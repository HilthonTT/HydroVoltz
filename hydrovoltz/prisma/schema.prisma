generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}
  
model User {
  id              String    @id @default(uuid())
  externalUserId  String    @unique

  username        String    @unique
  imageUrl        String    @db.Text
  status          String?   @db.Text

  sentRequests    FriendRequest[] @relation("sentRequest")
  receivedRequest FriendRequest[] @relation("receivedRequest")

  friendshipsInitiated Friend[] @relation("initiator")
  friendshipsReceived Friend[] @relation("initiatedFriend")

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

enum Status {
  PENDING
  ACCEPTED
  DECLINED
}

model FriendRequest {
  id          String   @id @default(uuid())

  status      Status   @default(PENDING)

  receiverId  String
  senderId    String

  receiver    User     @relation("sentRequest", fields: [receiverId], references: [id], onDelete: Cascade)
  sender      User     @relation("receivedRequest", fields: [senderId], references: [id], onDelete: Cascade)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([receiverId])
  @@index([senderId])
}

model Friend {
  id        String @id @default(uuid())
  
  initiator     User     @relation("initiator", fields: [initiatorId], references: [id])
  initiatorId   String

  friend        User     @relation("initiatedFriend", fields: [friendId], references: [id])
  friendId      String

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([initiatorId])
  @@index([friendId])
  @@unique([initiatorId, friendId])
}